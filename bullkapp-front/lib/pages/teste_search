import 'package:flutter/material.dart';

void main() {
  runApp(SearchTeste());
}

class SearchTeste extends StatelessWidget {
  @override
  Widget build(BuildContext context) {
    return MaterialApp(
      home: HomeScreen(),
    );
  }
}

class SearchTeste extends StatelessWidget {
  final List<String> names = [
    "Alice",
    "Bob",
    "Charlie",
    "David",
    "Ella",
    "Frank",
    "Grace",
    "Henry",
    "Isabel",
    "Jack",
    "Katherine",
    "Liam",
  ];

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: Text("Search Example"),
      ),
      body: Padding(
        padding: const EdgeInsets.all(8.0),
        child: Column(
          children: [
            TextField(
              decoration: InputDecoration(
                hintText: "Digite um nome",
                suffixIcon: IconButton(
                  icon: Icon(Icons.search),
                  onPressed: () {
                    showSearch(context: context, delegate: NameSearchDelegate(names));
                  },
                ),
              ),
            ),
            Expanded(
              child: ListView.builder(
                itemCount: names.length,
                itemBuilder: (context, index) {
                  return ListTile(
                    title: Text(names[index]),
                  );
                },
              ),
            ),
          ],
        ),
      ),
    );
  }
}

class NameSearchDelegate extends SearchDelegate<String> {
  final List<String> names;

  NameSearchDelegate(this.names);

  @override
  List<Widget> buildActions(BuildContext context) {
    // Botões de ação na barra de pesquisa.
    return [
      IconButton(
        icon: Icon(Icons.clear),
        onPressed: () {
          query = '';
        },
      ),
    ];
  }

  @override
  Widget buildLeading(BuildContext context) {
    // Ícone à esquerda da barra de pesquisa (geralmente o botão "Voltar").
    return IconButton(
      icon: Icon(Icons.arrow_back),
      onPressed: () {
        close(context, null);
      },
    );
  }

  @override
  Widget buildResults(BuildContext context) {
    // Mostra os resultados da pesquisa com base na query.
    final results = names.where((name) => name.toLowerCase().contains(query.toLowerCase())).toList();

    return ListView.builder(
      itemCount: results.length,
      itemBuilder: (context, index) {
        return ListTile(
          title: Text(results[index]),
          onTap: () {
            // Quando um resultado é selecionado, retorna esse resultado.
            close(context, results[index]);
          },
        );
      },
    );
  }

  @override
  Widget buildSuggestions(BuildContext context) {
    // Sugestões de pesquisa enquanto o usuário digita.
    final suggestions = names.where((name) => name.toLowerCase().contains(query.toLowerCase())).toList();

    return ListView.builder(
      itemCount: suggestions.length,
      itemBuilder: (context, index) {
        return ListTile(
          title: Text(suggestions[index]),
          onTap: () {
            // Quando uma sugestão é selecionada, atualiza a query de pesquisa.
            query = suggestions[index];
          },
        );
      },
    );
  }
}
